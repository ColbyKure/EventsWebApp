@model SwEventManager.Models.Event

@{
    ViewBag.Title = "New Event";
    ViewBag.pageLabel1 = "Event Manager";
    ViewBag.pageLabel2 = "User Manager";
    ViewBag.Index = "Index";
    ViewBag.AdminEvents = "AdminEvents";
    ViewBag.AdminUsers = "AdminUsers";
    ViewBag.UserEvents = "UserEvents";
    ViewBag.UsView = "User View";
}

<h2>Create New Event</h2>


@using (Html.BeginForm("Create", "AdminEvents", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        <label class="control-label col-md-2" for="EventName">Event Name</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.EventName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EventName, "", new { @class = "text-danger" })
        </div>
    </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="EventDescription">Event Description</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.EventDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EventDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="EventCatagory">Catagory</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.EventCategory, (IEnumerable<SelectListItem>)ViewBag.MyCatagories, "Select Catagory", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EventCategory, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="StartDate">Start Date</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="EndDate">End Date</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="StartTime">Start Time</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control", @type = "time" } })
                @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="EndTime">End Time</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @class = "form-control", @type = "time" } })
                @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="Location">Location</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="OpenForRegistration">Open for Registration</label>
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.CheckBoxFor(model => model.OpenForRegistration, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.OpenForRegistration, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="imagePath">Event Image</label>
            <div class="col-md-10">
                    <label for="file">Upload Image:</label>
                    <input type="file" name="file" id="file" style="width: 100%;" />
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="AdultPrice">Adult Price</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.AdultPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AdultPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="ChildPrice">Child Price</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.ChildPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ChildPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="CompanyName">Company Name</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div class="col-md-offset-2 col-md-10">
    @Html.ActionLink("Cancel", "Index")
</div>
<br/>
<hr/>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
